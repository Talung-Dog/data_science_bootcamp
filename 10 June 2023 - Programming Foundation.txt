Live : 10 June 2023 Programing Foundation

https://replit.com/

คำสั่งตามด้วย enter นะ ไม่ใช่กด run
pwd = print working directory 
ls=list file ทั้งหมดใน folder นี้
clear = clear หน้าจอนี้ (ctrl+l)
rm+ ชื่อไฟล์ = remove ไฟล์นั้นๆทิ้งไป (ถ้าลบแล้วลบเลย กู้คืนไม่ได้)
echo เคาะ space bar ตามด้วยข้อความ = สั่งคอมให้ปริ้นข้อความ
เช่น echo hi! (enter) ผลลัพธ์จะได้ hi!
touch  เคาะ space  bar ตามด้วยชื่อไฟล์ = สั่งคอมให้ปริ้นข้อความสร้างไฟล์
[การพิมพ์ข้อความอะไรใน file จำเป็นต้องมี บรรทัด balnk เสมอ เพราะว่า เวลา cat file ออกมา prompt line มันจะเด้งไปอยู่บรรทัดใหม่ให้เลยสวยงาม]
cat  เคาะ space  bar ตามด้วยชื่อไฟล์= ให้เอา content ใน file นั่นออกมา
[cat / concatenation ให้เอา string ที่อยู่ใน file นี้มาเรียงต่อกันใน terminal]
echo +ชื่อคำที่ต้องการ >> ชื่อไฟล์   เป็นการ rediretion แทนที่จะส่งผลลัพธ์เข้ามาที่ terminal 
แต่มันจะส่งผลลัพธ์ไปที่ไฟล์นั้นแทน ตยใ
echo durian>>hello.text เป็นการส่งคำว่า durian เข้าไปที่ไฟล์ hello.text 
เครื่องหมาย >> 2 ตัวติดกันเรียกว่าการ redirect ผลลัพธ์ไป appen ในไฟล์
(ลอง cat  เคาะ space  bar ตามด้วยชื่อไฟล์ กด enter เพื่อดูก็ได้)

การ appen ด้วย >> ถ้าเราพิมพ์ผิดเป็น > จะให้ผลลัพธ์ต่างออกไป
สมมุติไฟล์เดิม fruit.text
mango
orange 
apple
เราอยากจะ echo durian >> fruit.text เพื่อ appen durian  เข้าไปเป็นรายการที่สี่ต่อจาก apple
แต่เราพิมพ์ผิดเป็น  echo durian > fruit.text > ผลลัพธ์จะกลายเป็น
fruit.text
durian

mkdir+ชื่อ folder สร้างโฟลเดอร์เนมใหม่
rmdir +ชื่อ folder/ ลบโฟลเดอร์ทิ้ง
สมมุติว่าเราจะเอาตัวเราเข้าไปอยู่ใน folder นั้นๆ ให้ใช้คำสั่ง คล้ายๆตอนเรียน DOS 
cd ชื่อโฟลเดอร์/ 
ลอง ls ดูสิ่งที่เก็บใน folder ก็ได้

ถ้าเราอยาก rename ชื่อไฟล์ ให้ใช้คำสั่ง mv หรือ move (ไม่ได้ move ไปไหนแต่คือการ rename)
ถาม BARD ดูได้ How to rename folder using command line 
mv old_name new_name

cd.. คือการถอยออกจาก directory ไป 1 step
cd movies/imdb แบบนี้ก็ได้ ก็วิ่งเข้า folder ย่อยไปเลย

เวลาเราจะพยายามลบ โฟลเดอร์ที่มี content อยู่ข้างใน
rmdir movies/
มันจะตอบว่า fail to remove directory not empty

เราจะใช้ -r ช่วย r = recursive (มันจะไล่ลบทุกอย่างในโฟลเดอร์)
rm -r movies/

มาลองดูวิธี run filr R ใน terminal หรือใน shell ตัวนี้เนี่ย
Rscript เป็นคำสั่งที่ใช้ในการ execute file ที่นามสกุล .r 
ตย. เช่น

Rscript main.r [Enter] แปลว่า จง run คำสั่งที่อยู่ใน main.r ทั้งหมด

คำสั่งทั้งหมดนี้ใช้ใน window ไม่ได้เพราะเราเรียนบน Linux
Linux เป็น Operating system ที่คนใช้เยอะที่สุด เพราะฟรี
Windows สามารถลงบนตัวนี้ก็ได้เรียก WSL (  Windows Subsystem For Linux)

Programing concept
1. variable  ตัวแปร
2. data type ประเภทของข้อมูล
3. data structure โครงสร้างข้อมูลที่ใหญ่ขึ้น
4. control flow การควบคุมโปรแกรม
5. function
อันนี้คือ 5 เรื่องสำคัญที่ไม่ว่าจะเป็น ภาษาไหน R/ Python/Java script ก็เป็นไปตาม concept ทั้ง 5 นี้


มาลองเขียนโค้ดกัน เราจะเขียนในหน้าต่าง script และผลลัพธ์จะไปโชว์ในหน้าต่าง console
คำสั่งแรกเลยคือ
print("hello world")  run โดย กด ctrl+enter 

ถ้าใช้ print เป็น Print  จะได้แบบนี้
> Print("hello world")
Error in Print("hello world") : could not find function "Print"

ความแตกต่างระหว่าง console กับ script คือ script  เหมือนกับ code ที่เก็บไว้ได้

Posit.Cloud หรือ Rstudio.Cloud ตอนนี้สามารถเขียนภาษาอื่นได้ เขียน Python ก็ได้
ลองกดปุ่ม + New file ดูสิ มีให้เลือกเพียบ เราจะลองเลือก Python ดู
เราสามารถเขียน 
print("hello world") ได้

ใน console ของ R เหมาะกับการ test code แบบเร็วๆ
การเขียน code ใน console จะไม่สามารถ save เก็บไว้ได้ เช่น
>1+1 
[1]
>2*2
[1] 4
>print("hello world")
[1] "hello world"
>log(5)
[1] 1.609438
>exp(2)

>2**2
[1] 4
>2**20
>1058576

ทั้ง python และ R เป็นเหมือนกันเลย เราเรียกว่า Read Evaluate Print Loop
คือเขียน code ปุ๊บ กด run เห็น result เลย
ที่เขียนมาเยอะๆข้างบน กด clear ปั๊บหายหมด ดังนั้นวันนี้จึงแนะนำให้เขียนใน script

มาเริ่มกันที่
1. create variable
my_name_is_pum  แบบนี้เรียก snake case ใช้ใน R, Py
my_name <- "Pum" Sanke case
เครื่องหมายนี้ <-  เรียก assign เป็นการส่งค่าวิ่งเข้าไปเก็บในตัวแปร

myNameIsPum แบบนี้ Camel case ใช้ใน Java
Code ใน R หรือ Py เป็น Case sensitive
คือถ้า 
>AGE
Error: object 'AGE' not found

แปลว่า เราพิมพ์ผิด ตัวเล็ก/ ใหญ่มีผล
เราควรสร้างตัวแปรเป็นตัวพิมพ์เล็กทั้งหมดจะได้ไม่ต้องมาจำว่าเมื่อกี้ชั้นตั้งตัวแปรยังไง
ถ้าอยากลบตัวแปร
rm(age)
สมมุติว่าเราประกาศตัวแปรไปแบบนี้

>my_name <-"Pum"
แล้วเราก็มาประกาศซ้ำอีกเป็น

>my_name <-"Salila"
[เขียนในหน้า script นะ]

หน้า console เราลอง
>my_name [enter]
[1] "Salila"

นั่นแปลว่ามัน Overwrite หรือเขียนทับไป

2. data type ประเภทของข้อมูล
2.1 numeric
2.2 character (string /text)
2.3 logical (boolene)
2.4 date

มันเหมือนใน google sheet เลย

x<-100
เราจะดูว่า ตัวแปร x เป็น  data type แบบไหน
ให้
class(x) [enter]
[1] "numeric" อันนี้มันโชว์ที่หน้า console นะ

my_name<-"Pum"
class(my_name) [enter]
[1] "character"

movie_lover <- logical
>class(movie_lover)
[1] "logical"

d<-"2023-06-10"
>class(d)
[1] "character"

เราสามารถ convert ประเภทของตัวแปรได้โดย as
d <- as. Date("2023-06-10")
ถ้าลอง class ดู

>class(d)
[1] "Date"

ตัวอย่าง
>x<-"100"
>class(x)
>"character"
ลอง convert ดู

>x<-as.numeric(x)
> class(x)
[1] "numeric"

สรุป as คือการเปลี่ยน data type
แต่การเช็ค data type ให้ใช้ is

> is.numeric(100)
[1] TRUE
> is.character(100)
[1] FALSE

อย่าลืมใส่ . หลัง is นะ

3. data structure คือเอาข้อมูลเล็กๆน้อยๆเมื่อสักครู่นี้มาประกอบร่างรวมกันเป็นโครงสร้างข้อมูลที่ใหญ่ขึ้น
เช่นใน R เนี่ยมี 4 ตัวทึ่ต้องรู้จัก
ตัวที่ 1 : vector
ตัวที่ 2 : list
ตัวที่ 3 : matrix


 
